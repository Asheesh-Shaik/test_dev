name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Adjust this if you are using a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH to Azure VM and deploy
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: 20.205.26.179
          username: test-dev  # e.g., azureuser
          password: ${{ secrets.AZURE_PASSWORD }}  # Store your password in secrets
          script: |
            # Change to the application directory or create it if it doesn't exist
            if [ ! -d "test_dev" ]; then
              git clone https://github.com/Asheesh-Shaik/test_dev.git 
            fi
            cd test_dev

            # Pull the latest changes from the repository
            git pull origin master  # Adjust branch name if necessary

            # Check if the container exists and stop/remove it
            if [ $(docker ps -aq -f name=my-streamlit-app) ]; then
              echo "Stopping and removing existing container..."
              docker stop my-streamlit-app || true
              docker rm my-streamlit-app || true
            else
              echo "No existing container to stop."
            fi

            # Check if the port is already in use and stop the process
            if [ $(lsof -ti:8501) ]; then
              echo "Port 8501 is already in use. Stopping the conflicting service..."
              # Stop the process using the port
              PID=$(lsof -ti:8501)
              sudo kill -9 $PID || true  # Use `|| true` to ignore errors if process doesn't exist
            fi

            # Ensure the Docker daemon is running
            sudo service docker start

            # Build the Docker image
            docker build -t my-streamlit-app .

            # Run the new container
            docker run -d --name my-streamlit-app -p 8501:8501 my-streamlit-app || { echo "Failed to start container"; exit 1; }
